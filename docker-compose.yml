version: '3.8'

services:
  # Main application
  app:
    build: .
    container_name: youtube-downloader-app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite+aiosqlite:///./data/downloads.db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
    volumes:
      - ./data:/app/data
      - ./downloads:/app/downloads
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: youtube-downloader-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background worker for downloads
  worker:
    build: .
    container_name: youtube-downloader-worker
    command: celery -A app.worker worker --loglevel=info
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite+aiosqlite:///./data/downloads.db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
    volumes:
      - ./data:/app/data
      - ./downloads:/app/downloads
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped

  # Celery beat for scheduled tasks
  scheduler:
    build: .
    container_name: youtube-downloader-scheduler
    command: celery -A app.worker beat --loglevel=info
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite+aiosqlite:///./data/downloads.db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped

  # Monitoring with Flower (Celery monitoring)
  flower:
    build: .
    container_name: youtube-downloader-flower
    command: celery -A app.worker flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: youtube-downloader-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./downloads:/var/www/downloads:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: youtube-downloader-network 